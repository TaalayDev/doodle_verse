import 'package:riverpod_annotation/riverpod_annotation.dart';
import 'package:hooks_riverpod/hooks_riverpod.dart';

import '../core/canvas/brushes.dart';
import '../core/canvas/figures.dart';
import '../core/canvas/tools.dart';
import '../data.dart';

part 'common.g.dart';

final localStorageProvider = Provider((ref) => LocalStorage());
final databaseProvider = Provider((ref) => DatabaseHelper.instance);

typedef ToolsData = ({
  BrushData pencil,
  BrushData defaultBrush,
  BrushData marker,
  BrushData watercolor,
  BrushData eraser,
  BrushData crayon,
  BrushData sprayPaint,
  BrushData neon,
  BrushData charcoal,
  BrushData star,
  BrushData sketchy,
  BrushData heart,
  BrushData bubbleBrush,
  BrushData glitterBrush,
  BrushData rainbowBrush,
  BrushData sparkleBrush,
  BrushData leafBrush,
  BrushData grassBrush,
  BrushData pixelBrush,
  BrushData glowBrush,
  BrushData mosaicBrush,
  BrushData splatBrush,
  BrushData calligraphyBrush,
  BrushData electricBrush,
  BrushData furBrush,
  BrushData galaxyBrush,
  BrushData fractalBrush,
  BrushData fireBrush,
  BrushData snowflakeBrush,
  BrushData cloudBrush,
  BrushData lightningBrush,
  BrushData featherBrush,
  BrushData galaxyBrush1,
  BrushData confettiBrush,
  BrushData metallicBrush,
  BrushData embroideryBrush,
  BrushData stainedGlassBrush,
  BrushData ribbonBrush,
  BrushData particleFieldBrush,
  BrushData waveInterferenceBrush,
  BrushData voronoiBrush,
  BrushData chaosTheoryBrush,
  BrushData inkBrush,
  BrushData fireworksBrush,
  BrushData embossBrush,
  BrushData glassBrush,
  BrushData rectangleTool,
  BrushData circleTool,
  BrushData lineTool,
  BrushData triangleTool,
  BrushData arrowTool,
  BrushData ellipseTool,
  BrushData polygonTool,
  BrushData starTool,
  BrushData heartTool,
  BrushData spiralTool,
  BrushData cloudTool,
  BrushData lightningTool,
  BrushData pentagonTool,
  BrushData hexagonTool,
  BrushData parallelogramTool,
  BrushData trapezoidTool,
  BrushData fillTool,
});

@riverpod
class Tools extends _$Tools {
  @override
  Future<ToolsData> build() async {
    return (
      pencil: await pencil,
      defaultBrush: defaultBrush,
      marker: await marker,
      watercolor: watercolor,
      eraser: eraser,
      crayon: crayon,
      sprayPaint: sprayPaint,
      neon: neon,
      charcoal: charcoal,
      sketchy: sketchy,
      star: star,
      heart: heart,
      bubbleBrush: bubbleBrush,
      glitterBrush: glitterBrush,
      rainbowBrush: rainbowBrush,
      sparkleBrush: sparkleBrush,
      leafBrush: leafBrush,
      grassBrush: grassBrush,
      pixelBrush: pixelBrush,
      glowBrush: glowBrush,
      mosaicBrush: mosaicBrush,
      splatBrush: splatBrush,
      calligraphyBrush: calligraphyBrush,
      electricBrush: electricBrush,
      furBrush: furBrush,
      galaxyBrush: galaxyBrush,
      fractalBrush: fractalBrush,
      fireBrush: fireBrush,
      snowflakeBrush: snowflakeBrush,
      cloudBrush: cloudBrush,
      lightningBrush: lightningBrush,
      featherBrush: featherBrush,
      galaxyBrush1: galaxyBrush,
      confettiBrush: confettiBrush,
      metallicBrush: metallicBrush,
      embroideryBrush: embroideryBrush,
      stainedGlassBrush: stainedGlassBrush,
      ribbonBrush: ribbonBrush,
      particleFieldBrush: particleFieldBrush,
      waveInterferenceBrush: waveInterferenceBrush,
      voronoiBrush: voronoiBrush,
      chaosTheoryBrush: chaosTheoryBrush,
      inkBrush: inkBrush,
      fireworksBrush: fireworksBrush,
      embossBrush: embossBrush,
      glassBrush: glassBrush,
      rectangleTool: rectangleTool,
      circleTool: circleTool,
      lineTool: lineTool,
      triangleTool: triangleTool,
      arrowTool: arrowTool,
      ellipseTool: ellipseTool,
      polygonTool: polygonTool,
      starTool: starTool,
      heartTool: heartTool,
      spiralTool: spiralTool,
      cloudTool: cloudTool,
      lightningTool: lightningTool,
      pentagonTool: pentagonTool,
      hexagonTool: hexagonTool,
      parallelogramTool: parallelogramTool,
      trapezoidTool: trapezoidTool,
      fillTool: fillTool,
    );
  }
}
